{"version":3,"sources":["Header.js","data.js","DinoItem.js","App.js","index.js"],"names":["Header","props","className","currentScore","highScore","onClick","handleRestart","id","name","image","clicked","DinoItem","item","gameOver","handleClick","src","alt","style","width","App","shuffleArray","handleScore","console","log","state","timesClicked","dinos","forEach","element","setState","Clicked","handleIncrement","shuffledArr","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","data","dinoItems","this","map","Helmet","content","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd411825.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>Dinosaur Memory Game</h1>\r\n      <h3>Click Each Dinosaur Photo----but only once!!</h3>\r\n\r\n      <div className=\"score\">\r\n        <h1>Score: {props.currentScore} </h1>\r\n        <h1>HighScore: {props.highScore} </h1>\r\n      </div>\r\n\r\n      <button className=\"btn\" onClick={() => props.handleRestart()}> Restart</button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","\r\n\r\n\r\n\r\nexport default [\r\n\r\n \r\n  {\r\n    id: 1,\r\n    name: 'Mabel',\r\n    image: 'https://i.imgur.com/qLeUCyv.png',\r\n    clicked: false,\r\n  \r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Larry',\r\n    image: 'https://i.imgur.com/b2UG14r.png',\r\n    clicked: false,\r\n\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Timmy',\r\n    image: 'https://i.imgur.com/HsFMolj.png',\r\n    clicked: false,\r\n\r\n  },\r\n   {\r\n    id: 4,\r\n    name: 'Lola',\r\n    image: 'https://i.imgur.com/Wvm7awc.png',\r\n    clicked: false,\r\n\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Debbie',\r\n    image: 'https://i.imgur.com/r5ZyLD5.png',\r\n    clicked: false,\r\n\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Lucas',\r\n    image: 'https://i.imgur.com/5bYDwht.png',\r\n    clicked: false,\r\n\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Dancer',\r\n    image: 'https://i.imgur.com/A3DE9Zu.png',\r\n    clicked: false,\r\n\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Zebe',\r\n    image: 'https://i.imgur.com/NrEoUMT.png',\r\n    clicked: false,\r\n\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Pete',\r\n    image: 'https://i.imgur.com/Zbn1r4K.png',\r\n    clicked: false,\r\n\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Lizzy',\r\n    image: 'https://i.imgur.com/cSqbyY8.png',\r\n    clicked: false,\r\n\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Harry',\r\n    image: 'https://i.imgur.com/Xuq627e.png',\r\n    clicked: false,\r\n\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Dink',\r\n    image: 'https://i.imgur.com/AXpNgVd.png',\r\n    clicked: false,\r\n\r\n  }, \r\n];","import { useState } from 'react'\r\n\r\nconst DinoItem = (props) => {\r\n\r\n  const { id, image, name } = props.item\r\n  return (\r\n    <div className={\"card \" + (props.gameOver ? \"disable\" : \"\")} key={id} onClick={() => props.handleClick(id)}>\r\n    <img src={image} alt=\"Avatar\" style={{width: '100%'}}/>\r\n     <div className=\"container\">\r\n      <h4><b>{name}</b></h4> \r\n      </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default DinoItem","import React, { Component } from \"react\";\nimport Header from './Header'\nimport data from './data.js'\nimport DinoItem from \"./DinoItem\";\nimport {Helmet} from \"react-helmet\";\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      dinos: data,\n      highScore: 0,\n      currentScore: 0,\n      Clicked: false,\n      gameOver: false,\n    }\n  }\n\n\n\n  handleClick = id => {\n    this.shuffleArray();\n    this.handleScore(id);\n    console.log(this.state.timesClicked);\n  };\n\n\n  handleScore = id => {\n    this.state.dinos.forEach(element => {\n      if (id === element.id && element.clicked === false) {\n        element.clicked = true;\n        this.setState({ Clicked: false });\n        this.handleIncrement();\n      } else if (id === element.id && element.clicked === true) {\n        if (this.state.currentScore > this.state.highScore) {\n          this.setState({ highScore: this.state.currentScore });\n          this.setState({gameOver: true })\n        }\n        this.setState({ currentScore: 0 });\n        this.setState({ Clicked: true });\n        this.state.dinos.forEach(element => (element.clicked = false));\n        console.log(this.state.dinos);\n      }\n    });\n  };\n\n\n  shuffleArray = () => {\n    // Shuffle array of objects\n    const shuffledArr = this.shuffle(this.state.dinos);\n    // Setting 'shuffledArr' as the new state\n    this.setState({ shuffledArr });\n  };\n\n   // handleIncrement increments this.state.currentScore by 1\n   handleIncrement = () => {\n    // Using setState method to update component's state\n    this.setState({ currentScore: this.state.currentScore + 1 });\n  };\n\n\n  shuffle = array => {\n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n\n\n  handleRestart = () => {\n    this.setState({ currentScore: 0 });\n    this.setState({ highScore: 0 });\n    this.setState({ gameOver: false });\n    this.setState({ Clicked: false });\n  }\n\n\n\n\n  render() {\n\n    const dinoItems = this.state.dinos.map(item => <DinoItem key={item.id} item={item} gameOver={this.state.gameOver} handleClick={this.handleClick} Clicked={this.state.Clicked}\n      />)\n    return (\n      <div>\n       <Helmet>\n        <title>Dino Memory Game</title>\n        <meta name=\"description\" content=\"memory game\" />\n      </Helmet>\n        <Header currentScore={this.state.currentScore} highScore={this.state.highScore} handleRestart={this.handleRestart} />\n        <div className={\"wrapper \" + (this.state.gameOver ? \"hide\" : \"\")}>{dinoItems}</div>\n\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}